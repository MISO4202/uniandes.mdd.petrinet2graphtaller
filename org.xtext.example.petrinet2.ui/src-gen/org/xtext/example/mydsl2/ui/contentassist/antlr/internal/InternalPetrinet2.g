/*
 * generated by Xtext
 */
grammar InternalPetrinet2;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl2.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl2.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl2.services.Petrinet2GrammarAccess;

}

@parser::members {
 
 	private Petrinet2GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(Petrinet2GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePetrinet
entryRulePetrinet 
:
{ before(grammarAccess.getPetrinetRule()); }
	 rulePetrinet
{ after(grammarAccess.getPetrinetRule()); } 
	 EOF 
;

// Rule Petrinet
rulePetrinet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPetrinetAccess().getGroup()); }
(rule__Petrinet__Group__0)
{ after(grammarAccess.getPetrinetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getAlternatives()); }
(rule__Node__Alternatives)
{ after(grammarAccess.getNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlace
entryRulePlace 
:
{ before(grammarAccess.getPlaceRule()); }
	 rulePlace
{ after(grammarAccess.getPlaceRule()); } 
	 EOF 
;

// Rule Place
rulePlace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlaceAccess().getGroup()); }
(rule__Place__Group__0)
{ after(grammarAccess.getPlaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputArc
entryRuleOutputArc 
:
{ before(grammarAccess.getOutputArcRule()); }
	 ruleOutputArc
{ after(grammarAccess.getOutputArcRule()); } 
	 EOF 
;

// Rule OutputArc
ruleOutputArc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputArcAccess().getGroup()); }
(rule__OutputArc__Group__0)
{ after(grammarAccess.getOutputArcAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputArc
entryRuleInputArc 
:
{ before(grammarAccess.getInputArcRule()); }
	 ruleInputArc
{ after(grammarAccess.getInputArcRule()); } 
	 EOF 
;

// Rule InputArc
ruleInputArc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputArcAccess().getGroup()); }
(rule__InputArc__Group__0)
{ after(grammarAccess.getInputArcAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getNodeParserRuleCall_0()); }
	ruleNode
{ after(grammarAccess.getElementAccess().getNodeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getOutputArcParserRuleCall_1()); }
	ruleOutputArc
{ after(grammarAccess.getElementAccess().getOutputArcParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getInputArcParserRuleCall_2()); }
	ruleInputArc
{ after(grammarAccess.getElementAccess().getInputArcParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTransitionParserRuleCall_0()); }
	ruleTransition
{ after(grammarAccess.getNodeAccess().getTransitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getPlaceParserRuleCall_1()); }
	rulePlace
{ after(grammarAccess.getNodeAccess().getPlaceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Petrinet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__0__Impl
	rule__Petrinet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getPetrinetAction_0()); }
(

)
{ after(grammarAccess.getPetrinetAccess().getPetrinetAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__1__Impl
	rule__Petrinet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_1()); }
	RULE_LESS
{ after(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__2__Impl
	rule__Petrinet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getQUESTIONTerminalRuleCall_2()); }
	RULE_QUESTION
{ after(grammarAccess.getPetrinetAccess().getQUESTIONTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__3__Impl
	rule__Petrinet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getXmlKeyword_3()); }

	'xml' 

{ after(grammarAccess.getPetrinetAccess().getXmlKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__4__Impl
	rule__Petrinet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getVersionKeyword_4()); }

	'version' 

{ after(grammarAccess.getPetrinetAccess().getVersionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__5__Impl
	rule__Petrinet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_5()); }
	RULE_EQUALS
{ after(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__6__Impl
	rule__Petrinet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getQuotationMarkDigitOneFullStopDigitZeroQuotationMarkKeyword_6()); }

	'"1.0"' 

{ after(grammarAccess.getPetrinetAccess().getQuotationMarkDigitOneFullStopDigitZeroQuotationMarkKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__7__Impl
	rule__Petrinet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getQUESTIONTerminalRuleCall_7()); }
	RULE_QUESTION
{ after(grammarAccess.getPetrinetAccess().getQUESTIONTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__8__Impl
	rule__Petrinet__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_8()); }
	RULE_GREATER
{ after(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__9__Impl
	rule__Petrinet__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_9()); }
	RULE_LESS
{ after(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__10__Impl
	rule__Petrinet__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getPnmlPnmlKeyword_10()); }

	'pnml:pnml' 

{ after(grammarAccess.getPetrinetAccess().getPnmlPnmlKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__11__Impl
	rule__Petrinet__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getXmlnsPnmlKeyword_11()); }

	'xmlns:pnml' 

{ after(grammarAccess.getPetrinetAccess().getXmlnsPnmlKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__12__Impl
	rule__Petrinet__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_12()); }
	RULE_EQUALS
{ after(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__13__Impl
	rule__Petrinet__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getPnmlXsdKeyword_13()); }

	'"pnml.xsd"' 

{ after(grammarAccess.getPetrinetAccess().getPnmlXsdKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__14__Impl
	rule__Petrinet__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_14()); }
	RULE_GREATER
{ after(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__15__Impl
	rule__Petrinet__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_15()); }
	RULE_LESS
{ after(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__16__Impl
	rule__Petrinet__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getNetKeyword_16()); }

	'net' 

{ after(grammarAccess.getPetrinetAccess().getNetKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__17__Impl
	rule__Petrinet__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getTypeKeyword_17()); }

	'type' 

{ after(grammarAccess.getPetrinetAccess().getTypeKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__18__Impl
	rule__Petrinet__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_18()); }
	RULE_EQUALS
{ after(grammarAccess.getPetrinetAccess().getEQUALSTerminalRuleCall_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__19__Impl
	rule__Petrinet__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getPtNetKeyword_19()); }

	'"ptNet"' 

{ after(grammarAccess.getPetrinetAccess().getPtNetKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__20__Impl
	rule__Petrinet__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_20()); }
	RULE_GREATER
{ after(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__21
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__21__Impl
	rule__Petrinet__Group__22
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__21__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getElementsAssignment_21()); }
(rule__Petrinet__ElementsAssignment_21)*
{ after(grammarAccess.getPetrinetAccess().getElementsAssignment_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__22
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__22__Impl
	rule__Petrinet__Group__23
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__22__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_22()); }
	RULE_LESS
{ after(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_22()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__23
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__23__Impl
	rule__Petrinet__Group__24
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__23__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getSLASHTerminalRuleCall_23()); }
	RULE_SLASH
{ after(grammarAccess.getPetrinetAccess().getSLASHTerminalRuleCall_23()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__24
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__24__Impl
	rule__Petrinet__Group__25
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__24__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getNetKeyword_24()); }

	'net' 

{ after(grammarAccess.getPetrinetAccess().getNetKeyword_24()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__25
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__25__Impl
	rule__Petrinet__Group__26
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__25__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_25()); }
	RULE_GREATER
{ after(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_25()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__26
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__26__Impl
	rule__Petrinet__Group__27
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__26__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_26()); }
	RULE_LESS
{ after(grammarAccess.getPetrinetAccess().getLESSTerminalRuleCall_26()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__27
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__27__Impl
	rule__Petrinet__Group__28
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__27__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getSLASHTerminalRuleCall_27()); }
	RULE_SLASH
{ after(grammarAccess.getPetrinetAccess().getSLASHTerminalRuleCall_27()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__28
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__28__Impl
	rule__Petrinet__Group__29
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__28__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getPnmlPnmlKeyword_28()); }

	'pnml:pnml' 

{ after(grammarAccess.getPetrinetAccess().getPnmlPnmlKeyword_28()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Petrinet__Group__29
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Petrinet__Group__29__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Petrinet__Group__29__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_29()); }
	RULE_GREATER
{ after(grammarAccess.getPetrinetAccess().getGREATERTerminalRuleCall_29()); }
)

;
finally {
	restoreStackSize(stackSize);
}






























































rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLESSTerminalRuleCall_0()); }
	RULE_LESS
{ after(grammarAccess.getTransitionAccess().getLESSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTTRANSITIONTerminalRuleCall_1()); }
	RULE_TTRANSITION
{ after(grammarAccess.getTransitionAccess().getTTRANSITIONTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getTransitionAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getTransitionAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameAssignment_4()); }
(rule__Transition__NameAssignment_4)
{ after(grammarAccess.getTransitionAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGREATERTerminalRuleCall_5()); }
	RULE_GREATER
{ after(grammarAccess.getTransitionAccess().getGREATERTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLESSTerminalRuleCall_6()); }
	RULE_LESS
{ after(grammarAccess.getTransitionAccess().getLESSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
	rule__Transition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSLASHTerminalRuleCall_7()); }
	RULE_SLASH
{ after(grammarAccess.getTransitionAccess().getSLASHTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__8__Impl
	rule__Transition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTTRANSITIONTerminalRuleCall_8()); }
	RULE_TTRANSITION
{ after(grammarAccess.getTransitionAccess().getTTRANSITIONTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGREATERTerminalRuleCall_9()); }
	RULE_GREATER
{ after(grammarAccess.getTransitionAccess().getGREATERTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Place__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__0__Impl
	rule__Place__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getLESSTerminalRuleCall_0()); }
	RULE_LESS
{ after(grammarAccess.getPlaceAccess().getLESSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__1__Impl
	rule__Place__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getTPLACETerminalRuleCall_1()); }
	RULE_TPLACE
{ after(grammarAccess.getPlaceAccess().getTPLACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__2__Impl
	rule__Place__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getPlaceAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__3__Impl
	rule__Place__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getPlaceAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__4__Impl
	rule__Place__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getNameAssignment_4()); }
(rule__Place__NameAssignment_4)
{ after(grammarAccess.getPlaceAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__5__Impl
	rule__Place__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getGREATERTerminalRuleCall_5()); }
	RULE_GREATER
{ after(grammarAccess.getPlaceAccess().getGREATERTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__6__Impl
	rule__Place__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getLESSTerminalRuleCall_6()); }
	RULE_LESS
{ after(grammarAccess.getPlaceAccess().getLESSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__7__Impl
	rule__Place__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getSLASHTerminalRuleCall_7()); }
	RULE_SLASH
{ after(grammarAccess.getPlaceAccess().getSLASHTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__8__Impl
	rule__Place__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getTPLACETerminalRuleCall_8()); }
	RULE_TPLACE
{ after(grammarAccess.getPlaceAccess().getTPLACETerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Place__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Place__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Place__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getGREATERTerminalRuleCall_9()); }
	RULE_GREATER
{ after(grammarAccess.getPlaceAccess().getGREATERTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__OutputArc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__0__Impl
	rule__OutputArc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getLESSTerminalRuleCall_0()); }
	RULE_LESS
{ after(grammarAccess.getOutputArcAccess().getLESSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__1__Impl
	rule__OutputArc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getTOUTPUTARCTerminalRuleCall_1()); }
	RULE_TOUTPUTARC
{ after(grammarAccess.getOutputArcAccess().getTOUTPUTARCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__2__Impl
	rule__OutputArc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getOutputArcAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__3__Impl
	rule__OutputArc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__4__Impl
	rule__OutputArc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getNameAssignment_4()); }
(rule__OutputArc__NameAssignment_4)
{ after(grammarAccess.getOutputArcAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__5__Impl
	rule__OutputArc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getTargetKeyword_5()); }

	'target' 

{ after(grammarAccess.getOutputArcAccess().getTargetKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__6__Impl
	rule__OutputArc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_6()); }
	RULE_EQUALS
{ after(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__7__Impl
	rule__OutputArc__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getToAssignment_7()); }
(rule__OutputArc__ToAssignment_7)
{ after(grammarAccess.getOutputArcAccess().getToAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__8__Impl
	rule__OutputArc__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getSourceKeyword_8()); }

	'source' 

{ after(grammarAccess.getOutputArcAccess().getSourceKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__9__Impl
	rule__OutputArc__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_9()); }
	RULE_EQUALS
{ after(grammarAccess.getOutputArcAccess().getEQUALSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__10__Impl
	rule__OutputArc__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getFromAssignment_10()); }
(rule__OutputArc__FromAssignment_10)
{ after(grammarAccess.getOutputArcAccess().getFromAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__11__Impl
	rule__OutputArc__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getGREATERTerminalRuleCall_11()); }
	RULE_GREATER
{ after(grammarAccess.getOutputArcAccess().getGREATERTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__12__Impl
	rule__OutputArc__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getLESSTerminalRuleCall_12()); }
	RULE_LESS
{ after(grammarAccess.getOutputArcAccess().getLESSTerminalRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__13__Impl
	rule__OutputArc__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getSLASHTerminalRuleCall_13()); }
	RULE_SLASH
{ after(grammarAccess.getOutputArcAccess().getSLASHTerminalRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__14__Impl
	rule__OutputArc__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getTOUTPUTARCTerminalRuleCall_14()); }
	RULE_TOUTPUTARC
{ after(grammarAccess.getOutputArcAccess().getTOUTPUTARCTerminalRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputArc__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputArc__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getGREATERTerminalRuleCall_15()); }
	RULE_GREATER
{ after(grammarAccess.getOutputArcAccess().getGREATERTerminalRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__InputArc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__0__Impl
	rule__InputArc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getLESSTerminalRuleCall_0()); }
	RULE_LESS
{ after(grammarAccess.getInputArcAccess().getLESSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__1__Impl
	rule__InputArc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getTINPUTARCTerminalRuleCall_1()); }
	RULE_TINPUTARC
{ after(grammarAccess.getInputArcAccess().getTINPUTARCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__2__Impl
	rule__InputArc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getInputArcAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__3__Impl
	rule__InputArc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_3()); }
	RULE_EQUALS
{ after(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__4__Impl
	rule__InputArc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getNameAssignment_4()); }
(rule__InputArc__NameAssignment_4)
{ after(grammarAccess.getInputArcAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__5__Impl
	rule__InputArc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getTargetKeyword_5()); }

	'target' 

{ after(grammarAccess.getInputArcAccess().getTargetKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__6__Impl
	rule__InputArc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_6()); }
	RULE_EQUALS
{ after(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__7__Impl
	rule__InputArc__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getToAssignment_7()); }
(rule__InputArc__ToAssignment_7)
{ after(grammarAccess.getInputArcAccess().getToAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__8__Impl
	rule__InputArc__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getSourceKeyword_8()); }

	'source' 

{ after(grammarAccess.getInputArcAccess().getSourceKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__9__Impl
	rule__InputArc__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_9()); }
	RULE_EQUALS
{ after(grammarAccess.getInputArcAccess().getEQUALSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__10__Impl
	rule__InputArc__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getFromAssignment_10()); }
(rule__InputArc__FromAssignment_10)
{ after(grammarAccess.getInputArcAccess().getFromAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__11__Impl
	rule__InputArc__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getGREATERTerminalRuleCall_11()); }
	RULE_GREATER
{ after(grammarAccess.getInputArcAccess().getGREATERTerminalRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__12__Impl
	rule__InputArc__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getLESSTerminalRuleCall_12()); }
	RULE_LESS
{ after(grammarAccess.getInputArcAccess().getLESSTerminalRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__13__Impl
	rule__InputArc__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getSLASHTerminalRuleCall_13()); }
	RULE_SLASH
{ after(grammarAccess.getInputArcAccess().getSLASHTerminalRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__14__Impl
	rule__InputArc__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getTINPUTARCTerminalRuleCall_14()); }
	RULE_TINPUTARC
{ after(grammarAccess.getInputArcAccess().getTINPUTARCTerminalRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputArc__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputArc__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getGREATERTerminalRuleCall_15()); }
	RULE_GREATER
{ after(grammarAccess.getInputArcAccess().getGREATERTerminalRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}



































rule__Petrinet__ElementsAssignment_21
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPetrinetAccess().getElementsElementParserRuleCall_21_0()); }
	ruleElement{ after(grammarAccess.getPetrinetAccess().getElementsElementParserRuleCall_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getNameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Place__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaceAccess().getNameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getPlaceAccess().getNameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getNameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getOutputArcAccess().getNameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__ToAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getToNodeCrossReference_7_0()); }
(
{ before(grammarAccess.getOutputArcAccess().getToNodeSTRINGTerminalRuleCall_7_0_1()); }
	RULE_STRING{ after(grammarAccess.getOutputArcAccess().getToNodeSTRINGTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getOutputArcAccess().getToNodeCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputArc__FromAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputArcAccess().getFromNodeCrossReference_10_0()); }
(
{ before(grammarAccess.getOutputArcAccess().getFromNodeSTRINGTerminalRuleCall_10_0_1()); }
	RULE_STRING{ after(grammarAccess.getOutputArcAccess().getFromNodeSTRINGTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getOutputArcAccess().getFromNodeCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getNameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getInputArcAccess().getNameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__ToAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getToNodeCrossReference_7_0()); }
(
{ before(grammarAccess.getInputArcAccess().getToNodeSTRINGTerminalRuleCall_7_0_1()); }
	RULE_STRING{ after(grammarAccess.getInputArcAccess().getToNodeSTRINGTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getInputArcAccess().getToNodeCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputArc__FromAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputArcAccess().getFromNodeCrossReference_10_0()); }
(
{ before(grammarAccess.getInputArcAccess().getFromNodeSTRINGTerminalRuleCall_10_0_1()); }
	RULE_STRING{ after(grammarAccess.getInputArcAccess().getFromNodeSTRINGTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getInputArcAccess().getFromNodeCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_INT : 'this one has been deactivated';

RULE_GREATER : '>';

RULE_LESS : '<';

RULE_SLASH : '/';

RULE_TPLACE : 'place';

RULE_TTRANSITION : 'transition';

RULE_TOUTPUTARC : 'outputarc';

RULE_TINPUTARC : 'inputarc';

RULE_ID : 'id';

RULE_EQUALS : '=';

RULE_QUESTION : '?';

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


